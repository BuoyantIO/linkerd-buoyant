name: Actions

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:
    branches:
    - main

defaults:
  run:
    shell: bash

jobs:

  go_unit_tests:
    name: Go Unit Tests
    runs-on: ubuntu-20.04
    container:
      image: golang:1.16.2
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Test
      run: go test -race -mod=readonly -cover -v ./...

  go_lint:
    name: Go Lint
    runs-on: ubuntu-20.04
    container:
      image: golang:1.16.2
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Lint
      run: bin/lint

  build_cli:
    name: Build CLI
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
        - platform: linux-amd64
          goos: linux
          goarch: amd64
          exe: ""
        - platform: linux-arm64
          goos: linux
          goarch: arm64
          exe: ""
        - platform: linux-arm
          goos: linux
          goarch: arm
          exe: ""
        - platform: darwin-amd64
          goos: darwin
          goarch: amd64
          exe: ""
        - platform: darwin-arm64
          goos: darwin
          goarch: arm64
          exe: ""
        - platform: windows
          goos: windows
          goarch: ""
          exe: .exe
    container:
      image: golang:1.16.2
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Parse GITHUB_REF
      run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Generate linkerd-buoyant name
      run: echo "linkerd-buoyant-bin=linkerd-buoyant-${{ env.tag }}-${{ matrix.platform }}${{ matrix.exe }}" >> $GITHUB_ENV

    - name: Build CLI
      run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${{ env.linkerd-buoyant-bin }} -mod=readonly -ldflags "-s -w -X github.com/buoyantio/linkerd-buoyant/cli/pkg/version.Version=${{ env.tag }}" cli/main.go

    - name: Upload CLI Executable
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.linkerd-buoyant-bin }}
        path: ${{ env.linkerd-buoyant-bin }}

  smoke_test_cli:
    name: Smoke Test CLI
    needs:
    - build_cli
    strategy:
      matrix:
        include:
        # no arm runner available, skip linux-arm64, linux-arm, and darwin-arm64
        - platform: linux-amd64
          os: ubuntu-20.04
          exe: ""
        - platform: darwin-amd64
          os: macos-10.15
          exe: ""
        - platform: windows
          os: windows-2019
          exe: .exe
    runs-on: ${{ matrix.os }}
    steps:
    - name: Parse GITHUB_REF
      run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Generate linkerd-buoyant name
      run: echo "linkerd-buoyant-bin=linkerd-buoyant-${{ env.tag }}-${{ matrix.platform }}${{ matrix.exe }}" >> $GITHUB_ENV

    - name: Download CLI Executable
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.linkerd-buoyant-bin }}

    - name: Run CLI
      run: |
        ls -R
        chmod +x ${{ env.linkerd-buoyant-bin }}
        ./${{ env.linkerd-buoyant-bin }} version --cli

  # everything below here for main merges or releases (tags)
  docker_build_and_push:
    name: Docker Build and Push
    if: startsWith(github.ref, 'refs/tags') || github.ref == 'refs/heads/main'
    needs:
    - go_unit_tests
    - go_lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker tags (for main)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "platforms=linux/amd64" >> $GITHUB_ENV
          echo "docker_tags=ghcr.io/buoyantio/linkerd-buoyant:latest" >> $GITHUB_ENV
      - name: Generate Docker tags (for tagged release)
        if: startsWith(github.ref, 'refs/tags')
        run: |
          echo "platforms=linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7" >> $GITHUB_ENV
          echo "docker_tags=ghcr.io/buoyantio/linkerd-buoyant:latest,ghcr.io/buoyantio/linkerd-buoyant:${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: agent/Dockerfile
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ env.docker_tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # everything below here for releases (tags)
  create_release:
    if: startsWith(github.ref, 'refs/tags')
    name: Create Release
    needs:
    - go_unit_tests
    - go_lint
    - smoke_test_cli
    - docker_build_and_push
    runs-on: ubuntu-20.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false

  upload_release_assets:
    if: startsWith(github.ref, 'refs/tags')
    name: Upload Release Assets
    needs:
    - create_release
    strategy:
      matrix:
        include:
        - platform: linux-amd64
          exe: ""
        - platform: linux-arm64
          exe: ""
        - platform: linux-arm
          exe: ""
        - platform: darwin-amd64
          exe: ""
        - platform: darwin-arm64
          exe: ""
        - platform: windows
          exe: .exe
    runs-on: ubuntu-20.04
    steps:
    - name: Parse GITHUB_REF
      run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Generate linkerd-buoyant name
      run: echo "linkerd-buoyant-bin=linkerd-buoyant-${{ env.tag }}-${{ matrix.platform }}${{ matrix.exe }}" >> $GITHUB_ENV

    - name: Download CLI Executable
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.linkerd-buoyant-bin }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./${{ env.linkerd-buoyant-bin }}
        asset_name: ${{ env.linkerd-buoyant-bin }}
        asset_content_type: application/octet-stream
