// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: buoyant-cloud-api.proto

package bcloud

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{0}
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId  string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	AgentKey string `protobuf:"bytes,2,opt,name=agent_key,json=agentKey,proto3" json:"agent_key,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{1}
}

func (x *Auth) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *Auth) GetAgentKey() string {
	if x != nil {
		return x.AgentKey
	}
	return ""
}

type Workload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Workload:
	//	*Workload_Daemonset
	//	*Workload_Deployment
	//	*Workload_Statefulset
	Workload isWorkload_Workload `protobuf_oneof:"workload"`
}

func (x *Workload) Reset() {
	*x = Workload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workload) ProtoMessage() {}

func (x *Workload) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workload.ProtoReflect.Descriptor instead.
func (*Workload) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{2}
}

func (m *Workload) GetWorkload() isWorkload_Workload {
	if m != nil {
		return m.Workload
	}
	return nil
}

func (x *Workload) GetDaemonset() *DaemonSet {
	if x, ok := x.GetWorkload().(*Workload_Daemonset); ok {
		return x.Daemonset
	}
	return nil
}

func (x *Workload) GetDeployment() *Deployment {
	if x, ok := x.GetWorkload().(*Workload_Deployment); ok {
		return x.Deployment
	}
	return nil
}

func (x *Workload) GetStatefulset() *StatefulSet {
	if x, ok := x.GetWorkload().(*Workload_Statefulset); ok {
		return x.Statefulset
	}
	return nil
}

type isWorkload_Workload interface {
	isWorkload_Workload()
}

type Workload_Daemonset struct {
	Daemonset *DaemonSet `protobuf:"bytes,1,opt,name=daemonset,proto3,oneof"`
}

type Workload_Deployment struct {
	Deployment *Deployment `protobuf:"bytes,2,opt,name=deployment,proto3,oneof"`
}

type Workload_Statefulset struct {
	Statefulset *StatefulSet `protobuf:"bytes,3,opt,name=statefulset,proto3,oneof"`
}

func (*Workload_Daemonset) isWorkload_Workload() {}

func (*Workload_Deployment) isWorkload_Workload() {}

func (*Workload_Statefulset) isWorkload_Workload() {}

type DaemonSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DaemonSet []byte `protobuf:"bytes,1,opt,name=daemon_set,json=daemonSet,proto3" json:"daemon_set,omitempty"`
	Pods      []*Pod `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *DaemonSet) Reset() {
	*x = DaemonSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DaemonSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DaemonSet) ProtoMessage() {}

func (x *DaemonSet) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DaemonSet.ProtoReflect.Descriptor instead.
func (*DaemonSet) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{3}
}

func (x *DaemonSet) GetDaemonSet() []byte {
	if x != nil {
		return x.DaemonSet
	}
	return nil
}

func (x *DaemonSet) GetPods() []*Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

type Deployment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment  []byte        `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	ReplicaSets []*ReplicaSet `protobuf:"bytes,2,rep,name=replica_sets,json=replicaSets,proto3" json:"replica_sets,omitempty"`
}

func (x *Deployment) Reset() {
	*x = Deployment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Deployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deployment) ProtoMessage() {}

func (x *Deployment) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deployment.ProtoReflect.Descriptor instead.
func (*Deployment) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{4}
}

func (x *Deployment) GetDeployment() []byte {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *Deployment) GetReplicaSets() []*ReplicaSet {
	if x != nil {
		return x.ReplicaSets
	}
	return nil
}

type StatefulSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatefulSet []byte `protobuf:"bytes,1,opt,name=stateful_set,json=statefulSet,proto3" json:"stateful_set,omitempty"`
	Pods        []*Pod `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *StatefulSet) Reset() {
	*x = StatefulSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatefulSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatefulSet) ProtoMessage() {}

func (x *StatefulSet) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatefulSet.ProtoReflect.Descriptor instead.
func (*StatefulSet) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{5}
}

func (x *StatefulSet) GetStatefulSet() []byte {
	if x != nil {
		return x.StatefulSet
	}
	return nil
}

func (x *StatefulSet) GetPods() []*Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

type ReplicaSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaSet []byte `protobuf:"bytes,1,opt,name=replica_set,json=replicaSet,proto3" json:"replica_set,omitempty"`
	Pods       []*Pod `protobuf:"bytes,2,rep,name=pods,proto3" json:"pods,omitempty"`
}

func (x *ReplicaSet) Reset() {
	*x = ReplicaSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaSet) ProtoMessage() {}

func (x *ReplicaSet) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaSet.ProtoReflect.Descriptor instead.
func (*ReplicaSet) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{6}
}

func (x *ReplicaSet) GetReplicaSet() []byte {
	if x != nil {
		return x.ReplicaSet
	}
	return nil
}

func (x *ReplicaSet) GetPods() []*Pod {
	if x != nil {
		return x.Pods
	}
	return nil
}

type Pod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pod []byte `protobuf:"bytes,1,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *Pod) Reset() {
	*x = Pod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pod) ProtoMessage() {}

func (x *Pod) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pod.ProtoReflect.Descriptor instead.
func (*Pod) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{7}
}

func (x *Pod) GetPod() []byte {
	if x != nil {
		return x.Pod
	}
	return nil
}

type ConfigMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigMap []byte `protobuf:"bytes,1,opt,name=config_map,json=configMap,proto3" json:"config_map,omitempty"`
}

func (x *ConfigMap) Reset() {
	*x = ConfigMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigMap) ProtoMessage() {}

func (x *ConfigMap) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigMap.ProtoReflect.Descriptor instead.
func (*ConfigMap) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigMap) GetConfigMap() []byte {
	if x != nil {
		return x.ConfigMap
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node []byte `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{9}
}

func (x *Node) GetNode() []byte {
	if x != nil {
		return x.Node
	}
	return nil
}

type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []byte `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{10}
}

func (x *Service) GetService() []byte {
	if x != nil {
		return x.Service
	}
	return nil
}

type WorkloadMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//	*WorkloadMessage_Auth
	//	*WorkloadMessage_Added
	//	*WorkloadMessage_Updated
	//	*WorkloadMessage_Deleted
	//	*WorkloadMessage_List
	Message isWorkloadMessage_Message `protobuf_oneof:"message"`
}

func (x *WorkloadMessage) Reset() {
	*x = WorkloadMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadMessage) ProtoMessage() {}

func (x *WorkloadMessage) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadMessage.ProtoReflect.Descriptor instead.
func (*WorkloadMessage) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{11}
}

func (m *WorkloadMessage) GetMessage() isWorkloadMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *WorkloadMessage) GetAuth() *Auth {
	if x, ok := x.GetMessage().(*WorkloadMessage_Auth); ok {
		return x.Auth
	}
	return nil
}

func (x *WorkloadMessage) GetAdded() *AddWorkload {
	if x, ok := x.GetMessage().(*WorkloadMessage_Added); ok {
		return x.Added
	}
	return nil
}

func (x *WorkloadMessage) GetUpdated() *UpdateWorkload {
	if x, ok := x.GetMessage().(*WorkloadMessage_Updated); ok {
		return x.Updated
	}
	return nil
}

func (x *WorkloadMessage) GetDeleted() *DeleteWorkload {
	if x, ok := x.GetMessage().(*WorkloadMessage_Deleted); ok {
		return x.Deleted
	}
	return nil
}

func (x *WorkloadMessage) GetList() *ListWorkloads {
	if x, ok := x.GetMessage().(*WorkloadMessage_List); ok {
		return x.List
	}
	return nil
}

type isWorkloadMessage_Message interface {
	isWorkloadMessage_Message()
}

type WorkloadMessage_Auth struct {
	Auth *Auth `protobuf:"bytes,1,opt,name=auth,proto3,oneof"`
}

type WorkloadMessage_Added struct {
	Added *AddWorkload `protobuf:"bytes,2,opt,name=added,proto3,oneof"`
}

type WorkloadMessage_Updated struct {
	Updated *UpdateWorkload `protobuf:"bytes,3,opt,name=updated,proto3,oneof"`
}

type WorkloadMessage_Deleted struct {
	Deleted *DeleteWorkload `protobuf:"bytes,4,opt,name=deleted,proto3,oneof"`
}

type WorkloadMessage_List struct {
	List *ListWorkloads `protobuf:"bytes,5,opt,name=list,proto3,oneof"`
}

func (*WorkloadMessage_Auth) isWorkloadMessage_Message() {}

func (*WorkloadMessage_Added) isWorkloadMessage_Message() {}

func (*WorkloadMessage_Updated) isWorkloadMessage_Message() {}

func (*WorkloadMessage_Deleted) isWorkloadMessage_Message() {}

func (*WorkloadMessage_List) isWorkloadMessage_Message() {}

type AddWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workload *Workload `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
}

func (x *AddWorkload) Reset() {
	*x = AddWorkload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWorkload) ProtoMessage() {}

func (x *AddWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWorkload.ProtoReflect.Descriptor instead.
func (*AddWorkload) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{12}
}

func (x *AddWorkload) GetWorkload() *Workload {
	if x != nil {
		return x.Workload
	}
	return nil
}

type DeleteWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workload *Workload `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
}

func (x *DeleteWorkload) Reset() {
	*x = DeleteWorkload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWorkload) ProtoMessage() {}

func (x *DeleteWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWorkload.ProtoReflect.Descriptor instead.
func (*DeleteWorkload) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteWorkload) GetWorkload() *Workload {
	if x != nil {
		return x.Workload
	}
	return nil
}

type UpdateWorkload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldWorkload *Workload              `protobuf:"bytes,1,opt,name=old_workload,json=oldWorkload,proto3" json:"old_workload,omitempty"`
	NewWorkload *Workload              `protobuf:"bytes,2,opt,name=new_workload,json=newWorkload,proto3" json:"new_workload,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *UpdateWorkload) Reset() {
	*x = UpdateWorkload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkload) ProtoMessage() {}

func (x *UpdateWorkload) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkload.ProtoReflect.Descriptor instead.
func (*UpdateWorkload) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateWorkload) GetOldWorkload() *Workload {
	if x != nil {
		return x.OldWorkload
	}
	return nil
}

func (x *UpdateWorkload) GetNewWorkload() *Workload {
	if x != nil {
		return x.NewWorkload
	}
	return nil
}

func (x *UpdateWorkload) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ListWorkloads struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*Workload `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListWorkloads) Reset() {
	*x = ListWorkloads{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloads) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloads) ProtoMessage() {}

func (x *ListWorkloads) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloads.ProtoReflect.Descriptor instead.
func (*ListWorkloads) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{15}
}

func (x *ListWorkloads) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth     `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Event []byte    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Owner *Workload `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{16}
}

func (x *Event) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *Event) GetEvent() []byte {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Event) GetOwner() *Workload {
	if x != nil {
		return x.Owner
	}
	return nil
}

// This message represents a PEM encoded certificate
type CertData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Raw []byte `protobuf:"bytes,1,opt,name=raw,proto3" json:"raw,omitempty"`
}

func (x *CertData) Reset() {
	*x = CertData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertData) ProtoMessage() {}

func (x *CertData) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertData.ProtoReflect.Descriptor instead.
func (*CertData) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{17}
}

func (x *CertData) GetRaw() []byte {
	if x != nil {
		return x.Raw
	}
	return nil
}

// Represents the certificates that the control plane
// has been configured with.
type ControlPlaneCerts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is the identity issuer certificate chain;
	// it does not include a leaf certificate
	IssuerCrtChain []*CertData `protobuf:"bytes,1,rep,name=issuer_crt_chain,json=issuerCrtChain,proto3" json:"issuer_crt_chain,omitempty"`
	// The roots that the control plane has been configured
	// with and will add to newly created proxies
	Roots []*CertData `protobuf:"bytes,2,rep,name=roots,proto3" json:"roots,omitempty"`
}

func (x *ControlPlaneCerts) Reset() {
	*x = ControlPlaneCerts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlPlaneCerts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlPlaneCerts) ProtoMessage() {}

func (x *ControlPlaneCerts) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlPlaneCerts.ProtoReflect.Descriptor instead.
func (*ControlPlaneCerts) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{18}
}

func (x *ControlPlaneCerts) GetIssuerCrtChain() []*CertData {
	if x != nil {
		return x.IssuerCrtChain
	}
	return nil
}

func (x *ControlPlaneCerts) GetRoots() []*CertData {
	if x != nil {
		return x.Roots
	}
	return nil
}

type CertificateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Info:
	//	*CertificateInfo_ControlPlane
	Info isCertificateInfo_Info `protobuf_oneof:"info"`
}

func (x *CertificateInfo) Reset() {
	*x = CertificateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateInfo) ProtoMessage() {}

func (x *CertificateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateInfo.ProtoReflect.Descriptor instead.
func (*CertificateInfo) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{19}
}

func (m *CertificateInfo) GetInfo() isCertificateInfo_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *CertificateInfo) GetControlPlane() *ControlPlaneCerts {
	if x, ok := x.GetInfo().(*CertificateInfo_ControlPlane); ok {
		return x.ControlPlane
	}
	return nil
}

type isCertificateInfo_Info interface {
	isCertificateInfo_Info()
}

type CertificateInfo_ControlPlane struct {
	ControlPlane *ControlPlaneCerts `protobuf:"bytes,1,opt,name=control_plane,json=controlPlane,proto3,oneof"`
}

func (*CertificateInfo_ControlPlane) isCertificateInfo_Info() {}

type Server struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server []byte `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *Server) Reset() {
	*x = Server{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{20}
}

func (x *Server) GetServer() []byte {
	if x != nil {
		return x.Server
	}
	return nil
}

type ServerAuthorization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerAuthorization []byte `protobuf:"bytes,1,opt,name=server_authorization,json=serverAuthorization,proto3" json:"server_authorization,omitempty"`
}

func (x *ServerAuthorization) Reset() {
	*x = ServerAuthorization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerAuthorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerAuthorization) ProtoMessage() {}

func (x *ServerAuthorization) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerAuthorization.ProtoReflect.Descriptor instead.
func (*ServerAuthorization) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{21}
}

func (x *ServerAuthorization) GetServerAuthorization() []byte {
	if x != nil {
		return x.ServerAuthorization
	}
	return nil
}

type AuthPolicyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Servers              []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	ServerAuthorizations []*ServerAuthorization `protobuf:"bytes,2,rep,name=server_authorizations,json=serverAuthorizations,proto3" json:"server_authorizations,omitempty"`
}

func (x *AuthPolicyInfo) Reset() {
	*x = AuthPolicyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthPolicyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthPolicyInfo) ProtoMessage() {}

func (x *AuthPolicyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthPolicyInfo.ProtoReflect.Descriptor instead.
func (*AuthPolicyInfo) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{22}
}

func (x *AuthPolicyInfo) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *AuthPolicyInfo) GetServerAuthorizations() []*ServerAuthorization {
	if x != nil {
		return x.ServerAuthorizations
	}
	return nil
}

type TrafficSplit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficSplit []byte `protobuf:"bytes,1,opt,name=traffic_split,json=trafficSplit,proto3" json:"traffic_split,omitempty"`
}

func (x *TrafficSplit) Reset() {
	*x = TrafficSplit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficSplit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficSplit) ProtoMessage() {}

func (x *TrafficSplit) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficSplit.ProtoReflect.Descriptor instead.
func (*TrafficSplit) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{23}
}

func (x *TrafficSplit) GetTrafficSplit() []byte {
	if x != nil {
		return x.TrafficSplit
	}
	return nil
}

type TrafficSplitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrafficSplits []*TrafficSplit `protobuf:"bytes,1,rep,name=traffic_splits,json=trafficSplits,proto3" json:"traffic_splits,omitempty"`
}

func (x *TrafficSplitInfo) Reset() {
	*x = TrafficSplitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficSplitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficSplitInfo) ProtoMessage() {}

func (x *TrafficSplitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficSplitInfo.ProtoReflect.Descriptor instead.
func (*TrafficSplitInfo) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{24}
}

func (x *TrafficSplitInfo) GetTrafficSplits() []*TrafficSplit {
	if x != nil {
		return x.TrafficSplits
	}
	return nil
}

type ServiceProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceProfile []byte `protobuf:"bytes,1,opt,name=service_profile,json=serviceProfile,proto3" json:"service_profile,omitempty"`
}

func (x *ServiceProfile) Reset() {
	*x = ServiceProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProfile) ProtoMessage() {}

func (x *ServiceProfile) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProfile.ProtoReflect.Descriptor instead.
func (*ServiceProfile) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{25}
}

func (x *ServiceProfile) GetServiceProfile() []byte {
	if x != nil {
		return x.ServiceProfile
	}
	return nil
}

type ServiceProfileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceProfiles []*ServiceProfile `protobuf:"bytes,1,rep,name=service_profiles,json=serviceProfiles,proto3" json:"service_profiles,omitempty"`
}

func (x *ServiceProfileInfo) Reset() {
	*x = ServiceProfileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceProfileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceProfileInfo) ProtoMessage() {}

func (x *ServiceProfileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceProfileInfo.ProtoReflect.Descriptor instead.
func (*ServiceProfileInfo) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{26}
}

func (x *ServiceProfileInfo) GetServiceProfiles() []*ServiceProfile {
	if x != nil {
		return x.ServiceProfiles
	}
	return nil
}

type MulticlusterLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MulticlusterLink []byte `protobuf:"bytes,1,opt,name=multicluster_link,json=multiclusterLink,proto3" json:"multicluster_link,omitempty"`
}

func (x *MulticlusterLink) Reset() {
	*x = MulticlusterLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulticlusterLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticlusterLink) ProtoMessage() {}

func (x *MulticlusterLink) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticlusterLink.ProtoReflect.Descriptor instead.
func (*MulticlusterLink) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{27}
}

func (x *MulticlusterLink) GetMulticlusterLink() []byte {
	if x != nil {
		return x.MulticlusterLink
	}
	return nil
}

type MulticlusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MulticlusterLinks []*MulticlusterLink `protobuf:"bytes,1,rep,name=multicluster_links,json=multiclusterLinks,proto3" json:"multicluster_links,omitempty"`
}

func (x *MulticlusterInfo) Reset() {
	*x = MulticlusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MulticlusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MulticlusterInfo) ProtoMessage() {}

func (x *MulticlusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MulticlusterInfo.ProtoReflect.Descriptor instead.
func (*MulticlusterInfo) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{28}
}

func (x *MulticlusterInfo) GetMulticlusterLinks() []*MulticlusterLink {
	if x != nil {
		return x.MulticlusterLinks
	}
	return nil
}

type LinkerdMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	// Types that are assignable to Message:
	//	*LinkerdMessage_CrtInfo
	//	*LinkerdMessage_AuthPolicyInfo
	//	*LinkerdMessage_TrafficSplitInfo
	//	*LinkerdMessage_ServiceProfileInfo
	//	*LinkerdMessage_MulticlusterInfo
	Message isLinkerdMessage_Message `protobuf_oneof:"message"`
}

func (x *LinkerdMessage) Reset() {
	*x = LinkerdMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkerdMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkerdMessage) ProtoMessage() {}

func (x *LinkerdMessage) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkerdMessage.ProtoReflect.Descriptor instead.
func (*LinkerdMessage) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{29}
}

func (x *LinkerdMessage) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (m *LinkerdMessage) GetMessage() isLinkerdMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *LinkerdMessage) GetCrtInfo() *CertificateInfo {
	if x, ok := x.GetMessage().(*LinkerdMessage_CrtInfo); ok {
		return x.CrtInfo
	}
	return nil
}

func (x *LinkerdMessage) GetAuthPolicyInfo() *AuthPolicyInfo {
	if x, ok := x.GetMessage().(*LinkerdMessage_AuthPolicyInfo); ok {
		return x.AuthPolicyInfo
	}
	return nil
}

func (x *LinkerdMessage) GetTrafficSplitInfo() *TrafficSplitInfo {
	if x, ok := x.GetMessage().(*LinkerdMessage_TrafficSplitInfo); ok {
		return x.TrafficSplitInfo
	}
	return nil
}

func (x *LinkerdMessage) GetServiceProfileInfo() *ServiceProfileInfo {
	if x, ok := x.GetMessage().(*LinkerdMessage_ServiceProfileInfo); ok {
		return x.ServiceProfileInfo
	}
	return nil
}

func (x *LinkerdMessage) GetMulticlusterInfo() *MulticlusterInfo {
	if x, ok := x.GetMessage().(*LinkerdMessage_MulticlusterInfo); ok {
		return x.MulticlusterInfo
	}
	return nil
}

type isLinkerdMessage_Message interface {
	isLinkerdMessage_Message()
}

type LinkerdMessage_CrtInfo struct {
	CrtInfo *CertificateInfo `protobuf:"bytes,2,opt,name=crt_info,json=crtInfo,proto3,oneof"`
}

type LinkerdMessage_AuthPolicyInfo struct {
	AuthPolicyInfo *AuthPolicyInfo `protobuf:"bytes,3,opt,name=auth_policy_info,json=authPolicyInfo,proto3,oneof"`
}

type LinkerdMessage_TrafficSplitInfo struct {
	TrafficSplitInfo *TrafficSplitInfo `protobuf:"bytes,4,opt,name=traffic_split_info,json=trafficSplitInfo,proto3,oneof"`
}

type LinkerdMessage_ServiceProfileInfo struct {
	ServiceProfileInfo *ServiceProfileInfo `protobuf:"bytes,5,opt,name=service_profile_info,json=serviceProfileInfo,proto3,oneof"`
}

type LinkerdMessage_MulticlusterInfo struct {
	MulticlusterInfo *MulticlusterInfo `protobuf:"bytes,6,opt,name=multicluster_info,json=multiclusterInfo,proto3,oneof"`
}

func (*LinkerdMessage_CrtInfo) isLinkerdMessage_Message() {}

func (*LinkerdMessage_AuthPolicyInfo) isLinkerdMessage_Message() {}

func (*LinkerdMessage_TrafficSplitInfo) isLinkerdMessage_Message() {}

func (*LinkerdMessage_ServiceProfileInfo) isLinkerdMessage_Message() {}

func (*LinkerdMessage_MulticlusterInfo) isLinkerdMessage_Message() {}

type GetProxyDiagnostics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiagnosticId string `protobuf:"bytes,1,opt,name=diagnostic_id,json=diagnosticId,proto3" json:"diagnostic_id,omitempty"`
	PodName      string `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodNamespace string `protobuf:"bytes,3,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
}

func (x *GetProxyDiagnostics) Reset() {
	*x = GetProxyDiagnostics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProxyDiagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyDiagnostics) ProtoMessage() {}

func (x *GetProxyDiagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyDiagnostics.ProtoReflect.Descriptor instead.
func (*GetProxyDiagnostics) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetProxyDiagnostics) GetDiagnosticId() string {
	if x != nil {
		return x.DiagnosticId
	}
	return ""
}

func (x *GetProxyDiagnostics) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetProxyDiagnostics) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

type GetProxyLogs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName      string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodNamespace string `protobuf:"bytes,2,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	NumLines     int32  `protobuf:"varint,3,opt,name=num_lines,json=numLines,proto3" json:"num_lines,omitempty"`
}

func (x *GetProxyLogs) Reset() {
	*x = GetProxyLogs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProxyLogs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProxyLogs) ProtoMessage() {}

func (x *GetProxyLogs) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProxyLogs.ProtoReflect.Descriptor instead.
func (*GetProxyLogs) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{31}
}

func (x *GetProxyLogs) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *GetProxyLogs) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *GetProxyLogs) GetNumLines() int32 {
	if x != nil {
		return x.NumLines
	}
	return 0
}

type AgentCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Command:
	//	*AgentCommand_GetProxyDiagnostics
	//	*AgentCommand_GetProxyLogs
	Command isAgentCommand_Command `protobuf_oneof:"command"`
}

func (x *AgentCommand) Reset() {
	*x = AgentCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentCommand) ProtoMessage() {}

func (x *AgentCommand) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentCommand.ProtoReflect.Descriptor instead.
func (*AgentCommand) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{32}
}

func (m *AgentCommand) GetCommand() isAgentCommand_Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (x *AgentCommand) GetGetProxyDiagnostics() *GetProxyDiagnostics {
	if x, ok := x.GetCommand().(*AgentCommand_GetProxyDiagnostics); ok {
		return x.GetProxyDiagnostics
	}
	return nil
}

func (x *AgentCommand) GetGetProxyLogs() *GetProxyLogs {
	if x, ok := x.GetCommand().(*AgentCommand_GetProxyLogs); ok {
		return x.GetProxyLogs
	}
	return nil
}

type isAgentCommand_Command interface {
	isAgentCommand_Command()
}

type AgentCommand_GetProxyDiagnostics struct {
	GetProxyDiagnostics *GetProxyDiagnostics `protobuf:"bytes,1,opt,name=get_proxy_diagnostics,json=getProxyDiagnostics,proto3,oneof"`
}

type AgentCommand_GetProxyLogs struct {
	GetProxyLogs *GetProxyLogs `protobuf:"bytes,2,opt,name=get_proxy_logs,json=getProxyLogs,proto3,oneof"`
}

func (*AgentCommand_GetProxyDiagnostics) isAgentCommand_Command() {}

func (*AgentCommand_GetProxyLogs) isAgentCommand_Command() {}

type ProxyDiagnostic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth               *Auth      `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	DiagnosticId       string     `protobuf:"bytes,2,opt,name=diagnostic_id,json=diagnosticId,proto3" json:"diagnostic_id,omitempty"`
	Logs               []byte     `protobuf:"bytes,3,opt,name=logs,proto3" json:"logs,omitempty"`
	Metrics            [][]byte   `protobuf:"bytes,4,rep,name=metrics,proto3" json:"metrics,omitempty"`
	PodManifest        *Pod       `protobuf:"bytes,5,opt,name=pod_manifest,json=podManifest,proto3" json:"pod_manifest,omitempty"`
	LinkerdConfigMap   *ConfigMap `protobuf:"bytes,6,opt,name=linkerd_config_map,json=linkerdConfigMap,proto3" json:"linkerd_config_map,omitempty"`
	Nodes              []*Node    `protobuf:"bytes,7,rep,name=nodes,proto3" json:"nodes,omitempty"`
	K8SServiceManifest *Service   `protobuf:"bytes,8,opt,name=k8s_service_manifest,json=k8sServiceManifest,proto3" json:"k8s_service_manifest,omitempty"`
}

func (x *ProxyDiagnostic) Reset() {
	*x = ProxyDiagnostic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyDiagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyDiagnostic) ProtoMessage() {}

func (x *ProxyDiagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyDiagnostic.ProtoReflect.Descriptor instead.
func (*ProxyDiagnostic) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{33}
}

func (x *ProxyDiagnostic) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProxyDiagnostic) GetDiagnosticId() string {
	if x != nil {
		return x.DiagnosticId
	}
	return ""
}

func (x *ProxyDiagnostic) GetLogs() []byte {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ProxyDiagnostic) GetMetrics() [][]byte {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *ProxyDiagnostic) GetPodManifest() *Pod {
	if x != nil {
		return x.PodManifest
	}
	return nil
}

func (x *ProxyDiagnostic) GetLinkerdConfigMap() *ConfigMap {
	if x != nil {
		return x.LinkerdConfigMap
	}
	return nil
}

func (x *ProxyDiagnostic) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ProxyDiagnostic) GetK8SServiceManifest() *Service {
	if x != nil {
		return x.K8SServiceManifest
	}
	return nil
}

type ProxyLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth         *Auth                  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	PodName      string                 `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodNamespace string                 `protobuf:"bytes,3,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	Lines        []byte                 `protobuf:"bytes,4,opt,name=lines,proto3" json:"lines,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ProxyLog) Reset() {
	*x = ProxyLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buoyant_cloud_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyLog) ProtoMessage() {}

func (x *ProxyLog) ProtoReflect() protoreflect.Message {
	mi := &file_buoyant_cloud_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyLog.ProtoReflect.Descriptor instead.
func (*ProxyLog) Descriptor() ([]byte, []int) {
	return file_buoyant_cloud_api_proto_rawDescGZIP(), []int{34}
}

func (x *ProxyLog) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProxyLog) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ProxyLog) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *ProxyLog) GetLines() []byte {
	if x != nil {
		return x.Lines
	}
	return nil
}

func (x *ProxyLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_buoyant_cloud_api_proto protoreflect.FileDescriptor

var file_buoyant_cloud_api_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2d,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x62, 0x75, 0x6f, 0x79, 0x61,
	0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x3e, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x38, 0x0a, 0x09, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x73, 0x65, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66,
	0x75, 0x6c, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75,
	0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x66, 0x75, 0x6c, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x66, 0x75, 0x6c, 0x73, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x52, 0x0a, 0x09, 0x44, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x64, 0x61, 0x65, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62,
	0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6f, 0x64,
	0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0x6a, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f,
	0x73, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x75, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x53, 0x65, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65,
	0x74, 0x73, 0x22, 0x58, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x53, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75,
	0x6c, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70, 0x6f, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x0a,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x70,
	0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x04, 0x70,
	0x6f, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x03, 0x50, 0x6f, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x6f, 0x64, 0x22, 0x2a, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x22, 0x1a, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75,
	0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e,
	0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x05, 0x61, 0x64, 0x64, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61,
	0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x48, 0x00,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x33, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x45, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12,
	0x3a, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0b,
	0x6f, 0x6c, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x46, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x22, 0x1c, 0x0a, 0x08, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x61, 0x77, 0x22, 0x85,
	0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x43,
	0x65, 0x72, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x10, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x63,
	0x72, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x43,
	0x72, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x22, 0x62, 0x0a, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x43, 0x65, 0x72,
	0x74, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61,
	0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x0e, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x75, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12, 0x57, 0x0a, 0x15, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x75, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x33, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x73,
	0x70, 0x6c, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x22, 0x56, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x73,
	0x22, 0x39, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x5e, 0x0a, 0x12, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x48, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75,
	0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x10, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x2b, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x62, 0x0a, 0x10,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x4e, 0x0a, 0x12, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62,
	0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x11, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x73,
	0x22, 0xc4, 0x03, 0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x3b, 0x0a, 0x08,
	0x63, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x07, 0x63, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x10, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a, 0x12, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4e, 0x0a, 0x11,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e,
	0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x6b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x75, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x73,
	0x22, 0xb8, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x58, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x43, 0x0a, 0x0e, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67, 0x73,
	0x48, 0x00, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x81, 0x03, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x27, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x70,
	0x6f, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x50, 0x6f, 0x64, 0x52, 0x0b, 0x70, 0x6f, 0x64, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65,
	0x73, 0x74, 0x12, 0x46, 0x0a, 0x12, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x52, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x29, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x14, 0x6b, 0x38, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x12, 0x6b, 0x38, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x22,
	0xc3, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x27, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x75, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xa0, 0x03, 0x0a, 0x03, 0x41, 0x70, 0x69, 0x12, 0x4a, 0x0a,
	0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1e, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x14, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x38, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x75,
	0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x14, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61,
	0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x1b, 0x2e,
	0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x1a, 0x14, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x17, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e,
	0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4c, 0x6f, 0x67,
	0x1a, 0x14, 0x2e, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x69, 0x6f,
	0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x64, 0x2d, 0x62, 0x75, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_buoyant_cloud_api_proto_rawDescOnce sync.Once
	file_buoyant_cloud_api_proto_rawDescData = file_buoyant_cloud_api_proto_rawDesc
)

func file_buoyant_cloud_api_proto_rawDescGZIP() []byte {
	file_buoyant_cloud_api_proto_rawDescOnce.Do(func() {
		file_buoyant_cloud_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_buoyant_cloud_api_proto_rawDescData)
	})
	return file_buoyant_cloud_api_proto_rawDescData
}

var file_buoyant_cloud_api_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_buoyant_cloud_api_proto_goTypes = []interface{}{
	(*Empty)(nil),                 // 0: buoyant.cloud.Empty
	(*Auth)(nil),                  // 1: buoyant.cloud.Auth
	(*Workload)(nil),              // 2: buoyant.cloud.Workload
	(*DaemonSet)(nil),             // 3: buoyant.cloud.DaemonSet
	(*Deployment)(nil),            // 4: buoyant.cloud.Deployment
	(*StatefulSet)(nil),           // 5: buoyant.cloud.StatefulSet
	(*ReplicaSet)(nil),            // 6: buoyant.cloud.ReplicaSet
	(*Pod)(nil),                   // 7: buoyant.cloud.Pod
	(*ConfigMap)(nil),             // 8: buoyant.cloud.ConfigMap
	(*Node)(nil),                  // 9: buoyant.cloud.Node
	(*Service)(nil),               // 10: buoyant.cloud.Service
	(*WorkloadMessage)(nil),       // 11: buoyant.cloud.WorkloadMessage
	(*AddWorkload)(nil),           // 12: buoyant.cloud.AddWorkload
	(*DeleteWorkload)(nil),        // 13: buoyant.cloud.DeleteWorkload
	(*UpdateWorkload)(nil),        // 14: buoyant.cloud.UpdateWorkload
	(*ListWorkloads)(nil),         // 15: buoyant.cloud.ListWorkloads
	(*Event)(nil),                 // 16: buoyant.cloud.Event
	(*CertData)(nil),              // 17: buoyant.cloud.CertData
	(*ControlPlaneCerts)(nil),     // 18: buoyant.cloud.ControlPlaneCerts
	(*CertificateInfo)(nil),       // 19: buoyant.cloud.CertificateInfo
	(*Server)(nil),                // 20: buoyant.cloud.Server
	(*ServerAuthorization)(nil),   // 21: buoyant.cloud.ServerAuthorization
	(*AuthPolicyInfo)(nil),        // 22: buoyant.cloud.AuthPolicyInfo
	(*TrafficSplit)(nil),          // 23: buoyant.cloud.TrafficSplit
	(*TrafficSplitInfo)(nil),      // 24: buoyant.cloud.TrafficSplitInfo
	(*ServiceProfile)(nil),        // 25: buoyant.cloud.ServiceProfile
	(*ServiceProfileInfo)(nil),    // 26: buoyant.cloud.ServiceProfileInfo
	(*MulticlusterLink)(nil),      // 27: buoyant.cloud.MulticlusterLink
	(*MulticlusterInfo)(nil),      // 28: buoyant.cloud.MulticlusterInfo
	(*LinkerdMessage)(nil),        // 29: buoyant.cloud.LinkerdMessage
	(*GetProxyDiagnostics)(nil),   // 30: buoyant.cloud.GetProxyDiagnostics
	(*GetProxyLogs)(nil),          // 31: buoyant.cloud.GetProxyLogs
	(*AgentCommand)(nil),          // 32: buoyant.cloud.AgentCommand
	(*ProxyDiagnostic)(nil),       // 33: buoyant.cloud.ProxyDiagnostic
	(*ProxyLog)(nil),              // 34: buoyant.cloud.ProxyLog
	(*timestamppb.Timestamp)(nil), // 35: google.protobuf.Timestamp
}
var file_buoyant_cloud_api_proto_depIdxs = []int32{
	3,  // 0: buoyant.cloud.Workload.daemonset:type_name -> buoyant.cloud.DaemonSet
	4,  // 1: buoyant.cloud.Workload.deployment:type_name -> buoyant.cloud.Deployment
	5,  // 2: buoyant.cloud.Workload.statefulset:type_name -> buoyant.cloud.StatefulSet
	7,  // 3: buoyant.cloud.DaemonSet.pods:type_name -> buoyant.cloud.Pod
	6,  // 4: buoyant.cloud.Deployment.replica_sets:type_name -> buoyant.cloud.ReplicaSet
	7,  // 5: buoyant.cloud.StatefulSet.pods:type_name -> buoyant.cloud.Pod
	7,  // 6: buoyant.cloud.ReplicaSet.pods:type_name -> buoyant.cloud.Pod
	1,  // 7: buoyant.cloud.WorkloadMessage.auth:type_name -> buoyant.cloud.Auth
	12, // 8: buoyant.cloud.WorkloadMessage.added:type_name -> buoyant.cloud.AddWorkload
	14, // 9: buoyant.cloud.WorkloadMessage.updated:type_name -> buoyant.cloud.UpdateWorkload
	13, // 10: buoyant.cloud.WorkloadMessage.deleted:type_name -> buoyant.cloud.DeleteWorkload
	15, // 11: buoyant.cloud.WorkloadMessage.list:type_name -> buoyant.cloud.ListWorkloads
	2,  // 12: buoyant.cloud.AddWorkload.workload:type_name -> buoyant.cloud.Workload
	2,  // 13: buoyant.cloud.DeleteWorkload.workload:type_name -> buoyant.cloud.Workload
	2,  // 14: buoyant.cloud.UpdateWorkload.old_workload:type_name -> buoyant.cloud.Workload
	2,  // 15: buoyant.cloud.UpdateWorkload.new_workload:type_name -> buoyant.cloud.Workload
	35, // 16: buoyant.cloud.UpdateWorkload.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 17: buoyant.cloud.ListWorkloads.workloads:type_name -> buoyant.cloud.Workload
	1,  // 18: buoyant.cloud.Event.auth:type_name -> buoyant.cloud.Auth
	2,  // 19: buoyant.cloud.Event.owner:type_name -> buoyant.cloud.Workload
	17, // 20: buoyant.cloud.ControlPlaneCerts.issuer_crt_chain:type_name -> buoyant.cloud.CertData
	17, // 21: buoyant.cloud.ControlPlaneCerts.roots:type_name -> buoyant.cloud.CertData
	18, // 22: buoyant.cloud.CertificateInfo.control_plane:type_name -> buoyant.cloud.ControlPlaneCerts
	20, // 23: buoyant.cloud.AuthPolicyInfo.servers:type_name -> buoyant.cloud.Server
	21, // 24: buoyant.cloud.AuthPolicyInfo.server_authorizations:type_name -> buoyant.cloud.ServerAuthorization
	23, // 25: buoyant.cloud.TrafficSplitInfo.traffic_splits:type_name -> buoyant.cloud.TrafficSplit
	25, // 26: buoyant.cloud.ServiceProfileInfo.service_profiles:type_name -> buoyant.cloud.ServiceProfile
	27, // 27: buoyant.cloud.MulticlusterInfo.multicluster_links:type_name -> buoyant.cloud.MulticlusterLink
	1,  // 28: buoyant.cloud.LinkerdMessage.auth:type_name -> buoyant.cloud.Auth
	19, // 29: buoyant.cloud.LinkerdMessage.crt_info:type_name -> buoyant.cloud.CertificateInfo
	22, // 30: buoyant.cloud.LinkerdMessage.auth_policy_info:type_name -> buoyant.cloud.AuthPolicyInfo
	24, // 31: buoyant.cloud.LinkerdMessage.traffic_split_info:type_name -> buoyant.cloud.TrafficSplitInfo
	26, // 32: buoyant.cloud.LinkerdMessage.service_profile_info:type_name -> buoyant.cloud.ServiceProfileInfo
	28, // 33: buoyant.cloud.LinkerdMessage.multicluster_info:type_name -> buoyant.cloud.MulticlusterInfo
	30, // 34: buoyant.cloud.AgentCommand.get_proxy_diagnostics:type_name -> buoyant.cloud.GetProxyDiagnostics
	31, // 35: buoyant.cloud.AgentCommand.get_proxy_logs:type_name -> buoyant.cloud.GetProxyLogs
	1,  // 36: buoyant.cloud.ProxyDiagnostic.auth:type_name -> buoyant.cloud.Auth
	7,  // 37: buoyant.cloud.ProxyDiagnostic.pod_manifest:type_name -> buoyant.cloud.Pod
	8,  // 38: buoyant.cloud.ProxyDiagnostic.linkerd_config_map:type_name -> buoyant.cloud.ConfigMap
	9,  // 39: buoyant.cloud.ProxyDiagnostic.nodes:type_name -> buoyant.cloud.Node
	10, // 40: buoyant.cloud.ProxyDiagnostic.k8s_service_manifest:type_name -> buoyant.cloud.Service
	1,  // 41: buoyant.cloud.ProxyLog.auth:type_name -> buoyant.cloud.Auth
	35, // 42: buoyant.cloud.ProxyLog.timestamp:type_name -> google.protobuf.Timestamp
	11, // 43: buoyant.cloud.Api.WorkloadStream:input_type -> buoyant.cloud.WorkloadMessage
	16, // 44: buoyant.cloud.Api.AddEvent:input_type -> buoyant.cloud.Event
	29, // 45: buoyant.cloud.Api.LinkerdInfo:input_type -> buoyant.cloud.LinkerdMessage
	1,  // 46: buoyant.cloud.Api.ManageAgent:input_type -> buoyant.cloud.Auth
	33, // 47: buoyant.cloud.Api.ProxyDiagnostics:input_type -> buoyant.cloud.ProxyDiagnostic
	34, // 48: buoyant.cloud.Api.ProxyLogs:input_type -> buoyant.cloud.ProxyLog
	0,  // 49: buoyant.cloud.Api.WorkloadStream:output_type -> buoyant.cloud.Empty
	0,  // 50: buoyant.cloud.Api.AddEvent:output_type -> buoyant.cloud.Empty
	0,  // 51: buoyant.cloud.Api.LinkerdInfo:output_type -> buoyant.cloud.Empty
	32, // 52: buoyant.cloud.Api.ManageAgent:output_type -> buoyant.cloud.AgentCommand
	0,  // 53: buoyant.cloud.Api.ProxyDiagnostics:output_type -> buoyant.cloud.Empty
	0,  // 54: buoyant.cloud.Api.ProxyLogs:output_type -> buoyant.cloud.Empty
	49, // [49:55] is the sub-list for method output_type
	43, // [43:49] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_buoyant_cloud_api_proto_init() }
func file_buoyant_cloud_api_proto_init() {
	if File_buoyant_cloud_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buoyant_cloud_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DaemonSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Deployment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatefulSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWorkload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWorkload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloads); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlPlaneCerts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Server); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerAuthorization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthPolicyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficSplit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficSplitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceProfileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulticlusterLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MulticlusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkerdMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProxyDiagnostics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProxyLogs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyDiagnostic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buoyant_cloud_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_buoyant_cloud_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Workload_Daemonset)(nil),
		(*Workload_Deployment)(nil),
		(*Workload_Statefulset)(nil),
	}
	file_buoyant_cloud_api_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*WorkloadMessage_Auth)(nil),
		(*WorkloadMessage_Added)(nil),
		(*WorkloadMessage_Updated)(nil),
		(*WorkloadMessage_Deleted)(nil),
		(*WorkloadMessage_List)(nil),
	}
	file_buoyant_cloud_api_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*CertificateInfo_ControlPlane)(nil),
	}
	file_buoyant_cloud_api_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*LinkerdMessage_CrtInfo)(nil),
		(*LinkerdMessage_AuthPolicyInfo)(nil),
		(*LinkerdMessage_TrafficSplitInfo)(nil),
		(*LinkerdMessage_ServiceProfileInfo)(nil),
		(*LinkerdMessage_MulticlusterInfo)(nil),
	}
	file_buoyant_cloud_api_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*AgentCommand_GetProxyDiagnostics)(nil),
		(*AgentCommand_GetProxyLogs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buoyant_cloud_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buoyant_cloud_api_proto_goTypes,
		DependencyIndexes: file_buoyant_cloud_api_proto_depIdxs,
		MessageInfos:      file_buoyant_cloud_api_proto_msgTypes,
	}.Build()
	File_buoyant_cloud_api_proto = out.File
	file_buoyant_cloud_api_proto_rawDesc = nil
	file_buoyant_cloud_api_proto_goTypes = nil
	file_buoyant_cloud_api_proto_depIdxs = nil
}
